// <auto-generated />
using System;
using ISC_BT2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ISC_BT2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250226102854_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ISC_BT2.Models.AllowAccess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessProperties")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AllowAccesses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessProperties = "InternName, DateOfBirth, University, Major",
                            RoleId = 2,
                            TableName = "Intern"
                        },
                        new
                        {
                            Id = 2,
                            AccessProperties = "InternName, Major",
                            RoleId = 3,
                            TableName = "Intern"
                        },
                        new
                        {
                            Id = 3,
                            AccessProperties = "InternName, InternMail, University, JobFields",
                            RoleId = 4,
                            TableName = "Intern"
                        });
                });

            modelBuilder.Entity("ISC_BT2.Models.Intern", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CitizenIdentification")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cvfile")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool?>("FullTime")
                        .HasColumnType("boolean");

                    b.Property<byte[]>("ImageData")
                        .HasColumnType("bytea");

                    b.Property<string>("InternAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool?>("InternEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("InternMail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InternName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("InternSpecialized")
                        .HasColumnType("integer");

                    b.Property<bool?>("Internable")
                        .HasColumnType("boolean");

                    b.Property<string>("JobFields")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Major")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TelephoneNum")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("University")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Interns");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CitizenIdentification = "123456789",
                            Cvfile = "nguyenvana_cv.pdf",
                            FullTime = true,
                            InternAddress = "123 Đường ABC, TP. HCM",
                            InternEnabled = true,
                            InternMail = "nguyenvana@example.com",
                            InternName = "Nguyễn Văn A",
                            InternSpecialized = 1,
                            Internable = true,
                            JobFields = "Backend Developer",
                            Major = "Công nghệ thông tin",
                            Note = "Ứng viên có kinh nghiệm về .NET",
                            TelephoneNum = "0123456789",
                            University = "Đại học Bách Khoa"
                        },
                        new
                        {
                            Id = 2,
                            CitizenIdentification = "987654321",
                            Cvfile = "tranthib_cv.pdf",
                            FullTime = false,
                            InternAddress = "456 Đường XYZ, Hà Nội",
                            InternEnabled = true,
                            InternMail = "tranthib@example.com",
                            InternName = "Trần Thị B",
                            InternSpecialized = 2,
                            Internable = true,
                            JobFields = "Data Scientist",
                            Major = "Khoa học dữ liệu",
                            Note = "Quan tâm đến trí tuệ nhân tạo",
                            TelephoneNum = "0987654321",
                            University = "Đại học Khoa học Tự nhiên"
                        },
                        new
                        {
                            Id = 3,
                            CitizenIdentification = "1122334455",
                            Cvfile = "levanc_cv.pdf",
                            FullTime = true,
                            InternAddress = "789 Đường DEF, Đà Nẵng",
                            InternEnabled = false,
                            InternMail = "levanc@example.com",
                            InternName = "Lê Văn C",
                            InternSpecialized = 3,
                            Internable = false,
                            JobFields = "IT Support",
                            Major = "Hệ thống thông tin",
                            Note = "Đã có kinh nghiệm làm việc tại công ty khác",
                            TelephoneNum = "0912345678",
                            University = "Đại học Sư phạm Kỹ thuật"
                        },
                        new
                        {
                            Id = 4,
                            CitizenIdentification = "6677889900",
                            Cvfile = "phamthid_cv.pdf",
                            FullTime = true,
                            InternAddress = "99 Đường GHI, Hải Phòng",
                            InternEnabled = true,
                            InternMail = "phamthid@example.com",
                            InternName = "Phạm Thị D",
                            InternSpecialized = 4,
                            Internable = true,
                            JobFields = "AI Engineer",
                            Major = "Trí tuệ nhân tạo",
                            Note = "Học xuất sắc ngành AI",
                            TelephoneNum = "0321654987",
                            University = "Đại học Công nghệ Thông tin"
                        });
                });

            modelBuilder.Entity("ISC_BT2.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            RoleName = "EnterpriseUser"
                        },
                        new
                        {
                            RoleId = 3,
                            RoleName = "Intern"
                        },
                        new
                        {
                            RoleId = 4,
                            RoleName = "Manager"
                        });
                });

            modelBuilder.Entity("ISC_BT2.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Fullname")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            PasswordHash = "admin123",
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            UserId = 2,
                            PasswordHash = "user123",
                            RoleId = 2,
                            Username = "enterprise_user"
                        },
                        new
                        {
                            UserId = 3,
                            PasswordHash = "intern123",
                            RoleId = 3,
                            Username = "intern_user"
                        },
                        new
                        {
                            UserId = 4,
                            PasswordHash = "manager123",
                            RoleId = 4,
                            Username = "manager"
                        });
                });

            modelBuilder.Entity("ISC_BT2.Models.AllowAccess", b =>
                {
                    b.HasOne("ISC_BT2.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ISC_BT2.Models.User", b =>
                {
                    b.HasOne("ISC_BT2.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
